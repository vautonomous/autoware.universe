<launch>
  <arg name="respawn_rosbridge" default="true"/>
  <arg name="launch_image_base64_converter" default="false"/>
  <arg name="launch_path_distance_calculator" default="false"/>
  <arg name="launch_default_ad_api" default="false"/>
  <!-- external api adaptor -->
  <arg name="launch_calibration_status_api" default="false"/>
  <arg name="launch_start_api" default="false"/>
  <arg name="topics_glob" default="/parameter_events, /rosout, /clients_connected, /client_count, /map/vector_map_marker, /planning/mission_planning/route_marker,/planning/scenario_planning/lane_driving/behavior_planning/path, /planning/scenario_planning/trajectory,  /perception/object_recognition/detection/traffic_signals,/hmi/goal_gnss_coordinate,/hmi/checkpoint_gnss_coordinate, /ui/ui_process_command, /api/autoware/get/engage, /awapi/vehicle/put/velocity, /awapi/autoware/get/status, /api/autoware/get/emergency, /awapi/vehicle/get/status, /ui/ui_process_diagnostic, /autoware/state, /planning/scenario_planning/max_velocity_default, /tf, /tf_static, /planning/scenario_planning/lane_driving/motion_planning/obstacle_stop_planner/virtual_wall, /planning/scenario_planning/lane_driving/motion_planning/obstacle_avoidance_planner/debug/wall_marker, /planning/scenario_planning/lane_driving/behavior_planning/behavior_velocity_planner/virtual_wall/stop_line, /planning/scenario_planning/lane_driving/motion_planning/obstacle_stop_planner/debug/marker" />
  <arg name="use_compression" default="true" />

  <!-- AD API -->
  <group if="$(var launch_default_ad_api)">
    <include file="$(find-pkg-share default_ad_api)/launch/default_ad_api.launch.py"/>
  </group>

  <!-- awapi (deprecated) -->
  <group>
    <include file="$(find-pkg-share awapi_awiv_adapter)/launch/awapi_awiv_adapter.launch.xml"/>
  </group>

  <!-- autoware api adaptor -->
  <group>
    <push-ros-namespace namespace="autoware_api"/>
    <include file="$(find-pkg-share tier4_autoware_api_launch)/launch/include/external_api_adaptor.launch.py">
      <arg name="launch_calibration_status_api" value="$(var launch_calibration_status_api)"/>
      <arg name="launch_start_api" value="$(var launch_start_api)"/>
    </include>
    <include file="$(find-pkg-share tier4_autoware_api_launch)/launch/include/internal_api_adaptor.launch.py"/>
    <include file="$(find-pkg-share tier4_autoware_api_launch)/launch/include/internal_api_relay.launch.xml"/>
  </group>

  <!-- autoware api utils -->
  <group>
    <push-ros-namespace namespace="autoware_api/utils"/>
    <include file="$(find-pkg-share path_distance_calculator)/launch/path_distance_calculator.launch.xml" if="$(var launch_path_distance_calculator)"/>
    <include file="$(find-pkg-share image_base64_converter)/launch/image_base64_converter.launch.xml" if="$(var launch_image_base64_converter)"/>
  </group>

  <!-- rosbridge -->
  <!-- TODO: respawn will work once https://github.com/ros2/launch/pull/569 is released. I'll delete this comment when it's done. -->
  <group>
    <include file="$(find-pkg-share rosbridge_server)/launch/rosbridge_websocket_launch.xml">
      <arg name="respawn" value="$(var respawn_rosbridge)"/>
      <arg name="topics_glob" value="$(var topics_glob)"/>
      <arg name="use_compression" value="$(var use_compression)"/>
    </include>
  </group>
</launch>
